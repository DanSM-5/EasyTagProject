// <auto-generated />
using System;
using EasyTagProject.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EasyTagProject.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EasyTagProject.Models.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Course");

                    b.Property<DateTime>("End");

                    b.Property<int?>("ScheduleId");

                    b.Property<DateTime>("Start");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.HasIndex("ScheduleId");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("EasyTagProject.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<int?>("RoomId");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("EasyTagProject.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Block")
                        .IsRequired()
                        .HasConversion(new ValueConverter<string, string>(v => default(string), v => default(string), new ConverterMappingHints(size: 1)));

                    b.Property<int>("Floor");

                    b.Property<int?>("LeftRoomId");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int>("Number");

                    b.Property<int>("Type");

                    b.HasKey("Id");

                    b.HasIndex("LeftRoomId")
                        .IsUnique()
                        .HasFilter("[LeftRoomId] IS NOT NULL");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("EasyTagProject.Models.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Room_FK");

                    b.HasKey("Id");

                    b.HasIndex("Room_FK")
                        .IsUnique()
                        .HasFilter("[Room_FK] IS NOT NULL");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("EasyTagProject.Models.Appointment", b =>
                {
                    b.HasOne("EasyTagProject.Models.Schedule")
                        .WithMany("Appointments")
                        .HasForeignKey("ScheduleId");
                });

            modelBuilder.Entity("EasyTagProject.Models.Item", b =>
                {
                    b.HasOne("EasyTagProject.Models.Room")
                        .WithMany("Items")
                        .HasForeignKey("RoomId");
                });

            modelBuilder.Entity("EasyTagProject.Models.Room", b =>
                {
                    b.HasOne("EasyTagProject.Models.Room", "LeftRoom")
                        .WithOne("RightRoom")
                        .HasForeignKey("EasyTagProject.Models.Room", "LeftRoomId");
                });

            modelBuilder.Entity("EasyTagProject.Models.Schedule", b =>
                {
                    b.HasOne("EasyTagProject.Models.Room", "Room")
                        .WithOne("Schedule")
                        .HasForeignKey("EasyTagProject.Models.Schedule", "Room_FK");
                });
#pragma warning restore 612, 618
        }
    }
}
